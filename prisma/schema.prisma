// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id @default(cuid())
  name        String
  email       String        @unique
  phone       String
  password    String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  appointments Appointment[]
}

model Specialty {
  id       String   @id
  name     String
  doctors  Doctor[]
  appointments Appointment[] // Nuevo: para relacionar con citas
}

model Doctor {
  id           String        @id
  name         String
  specialtyId  String
  specialty    Specialty     @relation(fields: [specialtyId], references: [id])
  appointments Appointment[]
}

model Appointment {
  id           String     @id @default(cuid())
  user         User       @relation(fields: [userId], references: [id])
  userId       String
  doctor       Doctor     @relation(fields: [doctorId], references: [id])
  doctorId     String
  specialty    Specialty  @relation(fields: [specialtyId], references: [id])
  specialtyId  String
  date         DateTime
  time         String
  createdAt    DateTime   @default(now())
  canceledAt   DateTime?  // Opcional, útil si querés marcar cancelaciones

  @@unique([userId, date, time], name: "User_One_Appointment_Per_Time")
  @@unique([doctorId, date, time], name: "Doctor_One_Appointment_Per_Time")
}